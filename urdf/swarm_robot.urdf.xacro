<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="swarm_robot">

  <!-- Robot parameters -->
  <xacro:property name="robot_radius" value="0.25"/>
  <xacro:property name="robot_height" value="0.2"/>
  <xacro:property name="wheel_radius" value="0.05"/>
  <xacro:property name="wheel_width" value="0.025"/>
  <xacro:property name="wheel_separation" value="0.3"/>
  
  <!-- Robot arguments -->
  <xacro:arg name="robot_name" default="robot"/>
  <xacro:arg name="robot_color" default="blue"/>

  <!-- Base link -->
  <link name="$(arg robot_name)/base_link">
    <visual>
      <origin xyz="0 0 0.05" rpy="0 0 0"/>
      <geometry>
        <cylinder radius="${robot_radius}" length="${robot_height}"/>
      </geometry>
      <material name="robot_color">
        <color rgba="0.2 0.5 1.0 1.0"/> <!-- Blue by default -->
      </material>
    </visual>
    
    <collision>
      <origin xyz="0 0 0.05" rpy="0 0 0"/>
      <geometry>
        <cylinder radius="${robot_radius}" length="${robot_height}"/>
      </geometry>
    </collision>
    
    <inertial>
      <origin xyz="0 0 0.05" rpy="0 0 0"/>
      <mass value="5.0"/>
      <inertia 
        ixx="0.1" ixy="0.0" ixz="0.0"
        iyy="0.1" iyz="0.0" 
        izz="0.15"/>
    </inertial>
  </link>

  <!-- Left wheel -->
  <link name="$(arg robot_name)/left_wheel">
    <visual>
      <origin xyz="0 0 0" rpy="1.5708 0 0"/>
      <geometry>
        <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
      </geometry>
      <material name="wheel_color">
        <color rgba="0.3 0.3 0.3 1.0"/>
      </material>
    </visual>
    
    <collision>
      <origin xyz="0 0 0" rpy="1.5708 0 0"/>
      <geometry>
        <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
      </geometry>
    </collision>
    
    <inertial>
      <origin xyz="0 0 0" rpy="1.5708 0 0"/>
      <mass value="0.5"/>
      <inertia 
        ixx="0.001" ixy="0.0" ixz="0.0"
        iyy="0.001" iyz="0.0" 
        izz="0.001"/>
    </inertial>
  </link>

  <!-- Right wheel -->
  <link name="$(arg robot_name)/right_wheel">
    <visual>
      <origin xyz="0 0 0" rpy="1.5708 0 0"/>
      <geometry>
        <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
      </geometry>
      <material name="wheel_color">
        <color rgba="0.3 0.3 0.3 1.0"/>
      </material>
    </visual>
    
    <collision>
      <origin xyz="0 0 0" rpy="1.5708 0 0"/>
      <geometry>
        <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
      </geometry>
    </collision>
    
    <inertial>
      <origin xyz="0 0 0" rpy="1.5708 0 0"/>
      <mass value="0.5"/>
      <inertia 
        ixx="0.001" ixy="0.0" ixz="0.0"
        iyy="0.001" iyz="0.0" 
        izz="0.001"/>
    </inertial>
  </link>

  <!-- Camera sensor -->
  <link name="$(arg robot_name)/camera_link">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="0.05 0.05 0.05"/>
      </geometry>
      <material name="camera_color">
        <color rgba="0.0 0.0 0.0 1.0"/>
      </material>
    </visual>
    
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="0.05 0.05 0.05"/>
      </geometry>
    </collision>
    
    <inertial>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <mass value="0.1"/>
      <inertia 
        ixx="0.0001" ixy="0.0" ixz="0.0"
        iyy="0.0001" iyz="0.0" 
        izz="0.0001"/>
    </inertial>
  </link>

  <!-- Lidar sensor -->
  <link name="$(arg robot_name)/lidar_link">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <cylinder radius="0.04" length="0.08"/>
      </geometry>
      <material name="lidar_color">
        <color rgba="0.1 0.1 0.1 1.0"/>
      </material>
    </visual>
    
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <cylinder radius="0.04" length="0.08"/>
      </geometry>
    </collision>
    
    <inertial>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <mass value="0.1"/>
      <inertia 
        ixx="0.0001" ixy="0.0" ixz="0.0"
        iyy="0.0001" iyz="0.0" 
        izz="0.0001"/>
    </inertial>
  </link>

  <!-- Joint: Base to left wheel -->
  <joint name="$(arg robot_name)/left_wheel_joint" type="continuous">
    <parent link="$(arg robot_name)/base_link"/>
    <child link="$(arg robot_name)/left_wheel"/>
    <origin xyz="0 ${wheel_separation/2} 0" rpy="0 0 0"/>
    <axis xyz="0 1 0"/>
  </joint>

  <!-- Joint: Base to right wheel -->
  <joint name="$(arg robot_name)/right_wheel_joint" type="continuous">
    <parent link="$(arg robot_name)/base_link"/>
    <child link="$(arg robot_name)/right_wheel"/>
    <origin xyz="0 -${wheel_separation/2} 0" rpy="0 0 0"/>
    <axis xyz="0 1 0"/>
  </joint>

  <!-- Joint: Base to camera -->
  <joint name="$(arg robot_name)/camera_joint" type="fixed">
    <parent link="$(arg robot_name)/base_link"/>
    <child link="$(arg robot_name)/camera_link"/>
    <origin xyz="0.2 0 0.15" rpy="0 0 0"/>
  </joint>

  <!-- Joint: Base to lidar -->
  <joint name="$(arg robot_name)/lidar_joint" type="fixed">
    <parent link="$(arg robot_name)/base_link"/>
    <child link="$(arg robot_name)/lidar_link"/>
    <origin xyz="0 0 0.25" rpy="0 0 0"/>
  </joint>

  <!-- Gazebo plugins -->
  <gazebo>
    <!-- Differential drive plugin -->
    <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
      <update_rate>50</update_rate>
      <left_joint>$(arg robot_name)/left_wheel_joint</left_joint>
      <right_joint>$(arg robot_name)/right_wheel_joint</right_joint>
      <wheel_separation>${wheel_separation}</wheel_separation>
      <wheel_diameter>${2*wheel_radius}</wheel_diameter>
      <max_wheel_torque>20</max_wheel_torque>
      <max_wheel_acceleration>1.0</max_wheel_acceleration>
      <command_topic>$(arg robot_name)/cmd_vel</command_topic>
      <odometry_topic>$(arg robot_name)/odom</odometry_topic>
      <odometry_frame>$(arg robot_name)/odom</odometry_frame>
      <robot_base_frame>$(arg robot_name)/base_link</robot_base_frame>
      <publish_odom>true</publish_odom>
      <publish_odom_tf>true</publish_odom_tf>
      <publish_wheel_tf>false</publish_wheel_tf>
    </plugin>
  </gazebo>

  <!-- Camera sensor plugin -->
  <gazebo reference="$(arg robot_name)/camera_link">
    <sensor type="camera" name="camera">
      <update_rate>30.0</update_rate>
      <camera name="head">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <frame_name>$(arg robot_name)/camera_link</frame_name>
        <topic_name>$(arg robot_name)/camera/image_raw</topic_name>
        <camera_info_topic_name>$(arg robot_name)/camera/camera_info</camera_info_topic_name>
      </plugin>
    </sensor>
  </gazebo>

  <!-- Lidar sensor plugin -->
  <gazebo reference="$(arg robot_name)/lidar_link">
    <sensor type="ray" name="laser">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>10</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>360</samples>
            <resolution>1</resolution>
            <min_angle>-3.14159</min_angle>
            <max_angle>3.14159</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.12</min>
          <max>12.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_laser" filename="libgazebo_ros_ray_sensor.so">
        <ros>
          <namespace>/$(arg robot_name)</namespace>
          <remapping>~/out:=scan</remapping>
        </ros>
        <output_type>sensor_msgs/LaserScan</output_type>
        <frame_name>$(arg robot_name)/lidar_link</frame_name>
      </plugin>
    </sensor>
  </gazebo>

  <!-- Robot color materials -->
  <gazebo reference="$(arg robot_name)/base_link">
    <material>Gazebo/Blue</material>
  </gazebo>

</robot> 